<h1>Neogury Player</h1>
Share Link : <a href="/<%=@list.id%>">http://<%=request.host_with_port%>/<%=@list.id%></a>
<br>
<%=form_tag '/add' do %>
  <input type="hidden" name="id" value=<%=params[:id]%>>
  <input type="text" name="url" placeholder="http://youtube.com/123124">
  <input type="submit" value="등록하기">
<% end %>
<div id="player"></div>
<ul>
<% @list.clips.each do |c| %>
  <li><img class="clips" src="http://img.youtube.com/vi/<%=c.url%>/hqdefault.jpg" data-url="<%=c.url%>"></li>
<% end %>
</ul>
<script>
  // 2. This code loads the IFrame Player API code asynchronously.
  $now = $(".clips").first();
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '390',
      width: '640',
      videoId: $now.data("url"),
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    event.target.playVideo();
  }

  // 5. The API calls this function when the player's state changes.
  //    The function indicates that when playing a video (state=1),
  //    the player should play for six seconds and then stop.
  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.ENDED) {
      nextVideo();
    }
  }
  function stopVideo() {
    player.stopVideo();
  }
  function nextVideo() {
    $next = $now.parent().next().children();
    var next_url;
    if ($next.length == 1) {
      $now = $now.parent().next().children();
    } else {
      $now = $(".clips").first();
    }
    next_url = $now.data("url");
    player.loadVideoById(next_url);
  }
</script>
